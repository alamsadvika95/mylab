pipeline{
		agent any
		stages{
			stage("Checkout Code"){
				steps{
					checkout scm
				}
			}
			stage('Code Quality Check via SonarQube'){
				steps{
					script{
						def scannerHome = tool 'sonar-scanner';
						withSonarQubeEnv("sonarqube-server") {
							sh "${tool("sonar-scanner")}/bin/sonar-scanner \
							-Dsonar.projectKey=test-node-js \
							-Dsonar.sources=. \
							-Dsonar.css.node=. \
							-Dsonar.host.url=https://cr.singorojo.my.id \
							-Dsonar.login=d434e512d1c8be1fd545db37d9a898e1d12f4cbb"
						}
					}
				}
			}
			stage("Install Project Dependencies"){
				steps{
					nodejs(nodeJSInstallationName: "nodejs"){
						sh "cd app/nodejs/ && npm install"
					}
				}
			}
			stage("Build Image"){
				steps {
					script {
						app = docker.build("cicd-339902/ms1", "-f app/nodejs/Dockerfile ./app/nodejs/")
					}
				}
			}
			stage ("Push Image ") {
				steps{
					script{
						docker.withRegistry('https://eu.gcr.io', 'gcr:gcr-admin-key'){
							dockerImage.push()
						}
					}
				}
			}
		}
}











//-----------------------------------------------------------------------------------------------------------------------------------

// pipeline{

// 	agent any

// 	environment {
// 		DOCKERHUB_CREDENTIALS=credentials('docker-hub')
// 	}

// 	stages {

// 		stage('Build') {

// 			steps {
// 				sh 'docker build -t alamsadvika/node-web-app:latest .'
// 			}
// 		}

// 		stage('Login') {

// 			steps {
// 				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
// 			}
// 		}

// 		stage('Push') {

// 			steps {
// 				sh 'docker push alamsadvika/node-web-app:latest'
// 			}
// 		}
// 	}

// 	post {
// 		always {
// 			sh 'docker logout'
// 		}
// 	}

// }